<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>21-Day Prayer Tracker (Revised)</title>
    <style>
        :root {
            --primary-color: #17a2b8; /* Professional Blue-Teal */
            --secondary-color: #343a40; /* Dark text/headers */
            --background-color: #f8f9fa;
            --card-background: #ffffff;
            --success-color: #28a745;
            --warning-color: #ffc107;
            --danger-color: #dc3545;
        }

        body {
            font-family: 'Roboto', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: var(--background-color);
            color: var(--secondary-color);
        }

        .container {
            max-width: 950px;
            margin: auto;
            background: var(--card-background);
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        }

        h1 {
            text-align: center;
            color: var(--primary-color);
            margin-bottom: 30px;
            border-bottom: 3px solid var(--primary-color);
            padding-bottom: 10px;
        }

        /* --- Dashboard Styles --- */
        .dashboard {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            margin-bottom: 30px;
            gap: 15px;
        }

        .stat-card {
            flex: 1 1 180px; /* Allow cards to grow, but min width 180px */
            padding: 15px;
            background-color: #e9f7f8;
            border-radius: 8px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            border-left: 5px solid var(--primary-color);
        }

        .stat-card strong {
            display: block;
            font-size: 1.1em;
            color: var(--secondary-color);
            margin-bottom: 5px;
        }

        .stat-card span {
            font-size: 1.5em;
            font-weight: bold;
            color: var(--primary-color);
        }

        /* --- Transposed Grid Styles --- */
        .tracker-grid-wrapper {
            max-height: 500px; /* Max height before vertical scrollbar appears */
            overflow-y: auto;
            border: 1px solid #dee2e6;
            border-radius: 8px;
        }

        .tracker-grid {
            display: grid;
            /* 1 column for Date + 5 columns for Prayer Items */
            grid-template-columns: 100px repeat(5, 1fr); 
            min-width: 100%; /* Ensure grid takes full width */
            border-collapse: collapse;
        }

        .grid-header, .grid-cell {
            padding: 10px 8px;
            text-align: center;
            border: 1px solid #e9ecef;
        }
        
        /* Header Row (Prayer Items) */
        .grid-header {
            background-color: var(--secondary-color);
            color: white;
            font-weight: bold;
            position: sticky; /* Sticky header for vertical scroll */
            top: 0;
            z-index: 10;
        }

        /* Date Column (Row Headers) */
        .date-label {
            background-color: #f1f3f5;
            color: var(--secondary-color);
            font-weight: bold;
            text-align: left;
            position: sticky; /* Sticky date column for horizontal scroll (if it happens) */
            left: 0;
            z-index: 5;
        }

        .grid-cell {
            background-color: var(--card-background);
        }

        .grid-cell input[type="checkbox"] {
            transform: scale(1.3);
            cursor: pointer;
            accent-color: var(--success-color); /* Change checkbox color */
        }

        .reset-button {
            display: block;
            width: 250px;
            margin: 30px auto 0;
            padding: 12px;
            background-color: var(--danger-color);
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 1em;
            font-weight: bold;
            transition: background-color 0.3s, transform 0.1s;
        }

        .reset-button:hover {
            background-color: #c82333;
            transform: translateY(-1px);
        }

        .notes {
            margin-top: 20px;
            padding: 15px;
            background-color: #fff3cd;
            border: 1px solid #ffeeba;
            border-radius: 8px;
            color: #856404;
        }
        
        @media (max-width: 600px) {
            .container {
                padding: 15px;
            }
            .dashboard {
                flex-direction: column;
            }
            .stat-card {
                flex-basis: 100%;
            }
            .grid-header, .grid-cell {
                padding: 8px 5px;
                font-size: 0.8em;
            }
            .date-label {
                 font-size: 0.9em;
            }
            .tracker-grid {
                grid-template-columns: 80px repeat(5, 1fr); 
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üóìÔ∏è 21-Day Prayer Tracker üôè</h1>
        <p class="notes">
            **Tracking Period:** October 12, 2025 ‚Äì November 1, 2025 (21 Days).
            Your progress is **automatically saved** in your browser's **Local Storage**!
        </p>
        
        <div id="dashboard" class="dashboard">
            </div>

        <div class="tracker-grid-wrapper">
            <div id="prayerTracker" class="tracker-grid">
                </div>
        </div>

        <button class="reset-button" onclick="resetTracker()">Clear All Data (Start Over)</button>

    </div>

    <script>
        // --- Configuration (SAME AS ORIGINAL) ---
        const TRACKER_START_DATE = new Date('2025-10-12T00:00:00');
        const NUM_DAYS = 21;
        const PRAYER_ITEMS = [
            'Holy Mass',
            'Bible Reading',
            'Daniel Prayer',
            'Rosary',
            'Shalom TV Prayer'
        ];
        const STORAGE_KEY = 'prayerTrackerData';
        const trackerDiv = document.getElementById('prayerTracker');
        const dashboardDiv = document.getElementById('dashboard');
        
        // Helper function (SAME AS ORIGINAL)
        function getDateForIndex(index) {
            const date = new Date(TRACKER_START_DATE);
            date.setDate(TRACKER_START_DATE.getDate() + index);
            return date;
        }

        // --- LocalStorage Functions (SAME AS ORIGINAL) ---
        function loadData() {
            const storedData = localStorage.getItem(STORAGE_KEY);
            return storedData ? JSON.parse(storedData) : {};
        }

        function saveData(data) {
            localStorage.setItem(STORAGE_KEY, JSON.stringify(data));
        }

        // --- Event Handler (SAME AS ORIGINAL) ---
        function handleCheckboxChange(event) {
            const checkbox = event.target;
            const item = checkbox.dataset.item;
            const dateKey = checkbox.dataset.date;
            
            const data = loadData();
            
            if (!data[dateKey]) {
                data[dateKey] = {};
            }
            
            data[dateKey][item] = checkbox.checked;
            saveData(data);
            // Re-render dashboard after data changes
            renderDashboard(data); 
        }

        // --- New Dashboard Renderer ---
        function renderDashboard(data) {
            let dashboardHtml = '';
            
            PRAYER_ITEMS.forEach(item => {
                let completedDays = 0;
                
                // Iterate through all 21 days
                for (let i = 0; i < NUM_DAYS; i++) {
                    const date = getDateForIndex(i);
                    const dateKey = date.toISOString().split('T')[0];
                    
                    // Check if the item was completed on that day
                    if (data[dateKey] && data[dateKey][item] === true) {
                        completedDays++;
                    }
                }
                
                // Generate the HTML for the stat card
                dashboardHtml += `
                    <div class="stat-card">
                        <strong>${item}</strong>
                        <span>${completedDays}/${NUM_DAYS} Days</span>
                    </div>
                `;
            });
            
            dashboardDiv.innerHTML = dashboardHtml;
        }


        // --- New Transposed Grid Renderer ---
        function renderTracker() {
            const data = loadData();
            let html = '';

            // 1. Generate the Header Row (Prayer Items)
            html += `<div class="grid-header">Date</div>`;
            PRAYER_ITEMS.forEach(item => {
                html += `<div class="grid-header">${item}</div>`;
            });

            // 2. Generate the Date Rows
            for (let i = 0; i < NUM_DAYS; i++) {
                const date = getDateForIndex(i);
                const dateKey = date.toISOString().split('T')[0]; // e.g., '2025-10-12'
                const dateStr = `${date.getDate()}/${date.toLocaleString('default', { month: 'short' })}`; // e.g., '12/Oct'
                
                // Date Label Column (Sticky Row Header)
                html += `<div class="grid-cell date-label">${dateStr}</div>`;
                
                // Checkboxes for all 5 prayer items on this day
                PRAYER_ITEMS.forEach(item => {
                    // Check if the prayer was done on this day based on stored data
                    const isChecked = data[dateKey] && data[dateKey][item] === true ? 'checked' : '';
                    
                    // Create the unique checkbox HTML
                    const checkboxHtml = `
                        <input 
                            type="checkbox" 
                            data-item="${item}" 
                            data-date="${dateKey}"
                            ${isChecked}
                            onchange="handleCheckboxChange(event)"
                        >
                    `;
                    
                    html += `<div class="grid-cell">${checkboxHtml}</div>`;
                });
            }

            trackerDiv.innerHTML = html;
            // Also render the dashboard when the grid loads
            renderDashboard(data); 
        }

        // --- Reset Function (Modified to call renderDashboard) ---
        function resetTracker() {
            if (confirm('Are you sure you want to PERMANENTLY reset all your saved prayer tracking data? This cannot be undone.')) {
                localStorage.removeItem(STORAGE_KEY);
                renderTracker(); // Re-renders grid and calls renderDashboard
                alert('Tracker data has been reset!');
            }
        }

        // Initial render when the page loads
        document.addEventListener('DOMContentLoaded', renderTracker);
    </script>
</body>
</html>
